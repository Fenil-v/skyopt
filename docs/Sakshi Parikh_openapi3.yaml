openapi: 3.1.0
info:
  title: Flight Management System API
  version: '1.0'
servers:
  - url: http://localhost:9090
    description: Local development server

paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/login:
    post:
      summary: Authenticate a user and provide a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        '401':
          description: Unauthorized
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/logout:
    post:
      summary: Logout the user and clear the session
      responses:
        '200':
          description: Successfully logged out
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/user:
    get:
      summary: Retrieve current user profile details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/forgot-password:
    post:
      summary: Initiate a password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          description: Password reset initiated
        '404':
          description: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/auth/reset-password:
    post:
      summary: Complete the password reset process
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid request
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRegistration:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
        mobile_number:
          type: string
      required:
        - username
        - password
        - name
        - mobile_number
      description: Schema for registering a new user

    UserLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
      description: Schema for user login

    AuthTokenResponse:
      type: object
      properties:
        token:
          type: string
      description: Response containing the authentication token

    UserProfile:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        mobile_number:
          type: string
        email:
          type: string
      description: Schema for user profile details

    ForgotPasswordRequest:
      type: object
      properties:
        username:
          type: string
      required:
        - username
      description: Schema for initiating a password reset

    ResetPasswordRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
      description: Schema for completing the password reset process

    AuthResponse:
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
      description: Standard response for authentication actions
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message
        error:
          type: string
          description: Error type or code
      description: Standard error response
